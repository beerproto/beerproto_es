//*
// BeerProto
//
// Another beer format, written in protocol buffer.
//
// Copyright (c) 2020 Ross Merrigan

// @generated by protoc-gen-es v1.3.1
// @generated from file beerproto/v1/equipment.proto (package beerproto.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { MassType, PercentType, SpecificHeatType, SpecificVolumeType, VolumeType } from "./measureable_units_pb.js";

/**
 * @generated from enum beerproto.v1.EquipmentBaseForm
 */
export const EquipmentBaseForm = proto3.makeEnum(
  "beerproto.v1.EquipmentBaseForm",
  [
    {no: 0, name: "EQUIPMENT_BASE_FORM_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "EQUIPMENT_BASE_FORM_HLT", localName: "HLT"},
    {no: 2, name: "EQUIPMENT_BASE_FORM_MASH_TUN", localName: "MASH_TUN"},
    {no: 3, name: "EQUIPMENT_BASE_FORM_LAUTER_TUN", localName: "LAUTER_TUN"},
    {no: 4, name: "EQUIPMENT_BASE_FORM_BREW_KETTLE", localName: "BREW_KETTLE"},
    {no: 5, name: "EQUIPMENT_BASE_FORM_FERMENTER", localName: "FERMENTER"},
    {no: 6, name: "EQUIPMENT_BASE_FORM_AGING_VESSEL", localName: "AGING_VESSEL"},
    {no: 7, name: "EQUIPMENT_BASE_FORM_PACKAGING_VESSEL", localName: "PACKAGING_VESSEL"},
  ],
);

/**
 * EquipmentType provides necessary information for individual brewing equipment
 *
 * @generated from message beerproto.v1.EquipmentItemType
 */
export const EquipmentItemType = proto3.makeMessageType(
  "beerproto.v1.EquipmentItemType",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "notes", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "boil_rate_per_hour", kind: "message", T: VolumeType },
    { no: 4, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "form", kind: "enum", T: proto3.getEnumType(EquipmentBaseForm) },
    { no: 6, name: "drain_rate_per_minute", kind: "message", T: VolumeType },
    { no: 7, name: "specific_heat", kind: "message", T: SpecificHeatType },
    { no: 8, name: "grain_absorption_rate", kind: "message", T: SpecificVolumeType },
    { no: 9, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "maximum_volume", kind: "message", T: VolumeType },
    { no: 11, name: "weight", kind: "message", T: MassType },
    { no: 12, name: "loss", kind: "message", T: VolumeType },
    { no: 13, name: "efficiency", kind: "message", T: PercentType },
  ],
);

/**
 * Provides necessary information for brewing equipment set
 *
 * @generated from message beerproto.v1.EquipmentType
 */
export const EquipmentType = proto3.makeMessageType(
  "beerproto.v1.EquipmentType",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "equipment_items", kind: "message", T: EquipmentItemType, repeated: true },
    { no: 4, name: "brewhouse_efficiency", kind: "message", T: PercentType },
  ],
);

