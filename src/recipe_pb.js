//*
// BeerProto
//
// Another beer format, written in protocol buffer.
//
// Copyright (c) 2020 Ross Merrigan

// @generated by protoc-gen-es v1.9.0
// @generated from file beerproto/v1/recipe.proto (package beerproto.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { RecipeStyleType } from "./style_pb.js";
import { HopAdditionType, IBUEstimateType } from "./hop_pb.js";
import { AcidityType, ColorType, GravityType, PercentType, VolumeType } from "./measureable_units_pb.js";
import { FermentationProcedureType } from "./fermentation_pb.js";
import { MashProcedureType } from "./mash_pb.js";
import { PackagingProcedureType } from "./packaging_pb.js";
import { BoilProcedureType } from "./boil_pb.js";
import { MiscellaneousAdditionType } from "./misc_pb.js";
import { CultureAdditionType } from "./culture_pb.js";
import { WaterAdditionType } from "./water_pb.js";
import { FermentableAdditionType } from "./fermentable_pb.js";

/**
 * @generated from enum beerproto.v1.RecipeUnit
 */
export const RecipeUnit = /*@__PURE__*/ proto3.makeEnum(
  "beerproto.v1.RecipeUnit",
  [
    {no: 0, name: "RECIPE_UNIT_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "RECIPE_UNIT_CIDER", localName: "CIDER"},
    {no: 2, name: "RECIPE_UNIT_KOMBUCHA", localName: "KOMBUCHA"},
    {no: 3, name: "RECIPE_UNIT_SODA", localName: "SODA"},
    {no: 4, name: "RECIPE_UNIT_OTHER", localName: "OTHER"},
    {no: 5, name: "RECIPE_UNIT_MEAD", localName: "MEAD"},
    {no: 6, name: "RECIPE_UNIT_WINE", localName: "WINE"},
    {no: 7, name: "RECIPE_UNIT_EXTRACT", localName: "EXTRACT"},
    {no: 8, name: "RECIPE_UNIT_PARTIAL_MASH", localName: "PARTIAL_MASH"},
    {no: 9, name: "RECIPE_UNIT_ALL_GRAIN", localName: "ALL_GRAIN"},
  ],
);

/**
 * RecipeType composes the information stored in a recipe
 *
 * @generated from message beerproto.v1.RecipeType
 */
export const RecipeType = /*@__PURE__*/ proto3.makeMessageType(
  "beerproto.v1.RecipeType",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "efficiency", kind: "message", T: EfficiencyType },
    { no: 3, name: "style", kind: "message", T: RecipeStyleType },
    { no: 4, name: "ibu_estimate", kind: "message", T: IBUEstimateType },
    { no: 5, name: "color_estimate", kind: "message", T: ColorType },
    { no: 6, name: "beer_ph", kind: "message", T: AcidityType },
    { no: 7, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "type", kind: "enum", T: proto3.getEnumType(RecipeUnit) },
    { no: 9, name: "coauthor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "original_gravity", kind: "message", T: GravityType },
    { no: 11, name: "final_gravity", kind: "message", T: GravityType },
    { no: 12, name: "carbonation", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 13, name: "fermentation", kind: "message", T: FermentationProcedureType },
    { no: 14, name: "author", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "ingredients", kind: "message", T: IngredientsType },
    { no: 16, name: "mash", kind: "message", T: MashProcedureType },
    { no: 17, name: "packaging", kind: "message", T: PackagingProcedureType },
    { no: 18, name: "boil", kind: "message", T: BoilProcedureType },
    { no: 19, name: "taste", kind: "message", T: TasteType },
    { no: 20, name: "calories_per_pint", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 21, name: "created", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "batch_size", kind: "message", T: VolumeType },
    { no: 23, name: "notes", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "alcohol_by_volume", kind: "message", T: PercentType },
    { no: 25, name: "apparent_attenuation", kind: "message", T: PercentType },
  ],
);

/**
 * The efficiencyType stores each efficiency component
 *
 * @generated from message beerproto.v1.EfficiencyType
 */
export const EfficiencyType = /*@__PURE__*/ proto3.makeMessageType(
  "beerproto.v1.EfficiencyType",
  () => [
    { no: 1, name: "conversion", kind: "message", T: PercentType },
    { no: 2, name: "lauter", kind: "message", T: PercentType },
    { no: 3, name: "mash", kind: "message", T: PercentType },
    { no: 4, name: "brewhouse", kind: "message", T: PercentType },
  ],
);

/**
 * @generated from message beerproto.v1.IngredientsType
 */
export const IngredientsType = /*@__PURE__*/ proto3.makeMessageType(
  "beerproto.v1.IngredientsType",
  () => [
    { no: 1, name: "miscellaneous_additions", kind: "message", T: MiscellaneousAdditionType, repeated: true },
    { no: 2, name: "culture_additions", kind: "message", T: CultureAdditionType, repeated: true },
    { no: 3, name: "water_additions", kind: "message", T: WaterAdditionType, repeated: true },
    { no: 4, name: "fermentable_additions", kind: "message", T: FermentableAdditionType, repeated: true },
    { no: 5, name: "hop_additions", kind: "message", T: HopAdditionType, repeated: true },
  ],
);

/**
 * @generated from message beerproto.v1.TasteType
 */
export const TasteType = /*@__PURE__*/ proto3.makeMessageType(
  "beerproto.v1.TasteType",
  () => [
    { no: 1, name: "notes", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "rating", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
);

